@model LabReservation.UI.Models.ReservationModel

@{
    ViewData["Title"] = "Reserve";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Reserve</h1>

<h4>ReservationModel</h4>
<hr />
<div class="row">
    <div class="col-md-5">
        <form asp-action="Reserve" asp-controller="Home" method="post">

            @Html.AntiForgeryToken()
            <div class="form-group">
                <label class="form-check-label">
                    @Html.DisplayNameFor(model => model.LocationType)
                </label>


                @Html.DropDownListFor(model => model.LocationType, new List<SelectListItem>
               {
               new SelectListItem{ Value = "true", Text = "At Home" },
               new SelectListItem{ Value = "false", Text = "At Branch" }},
                "Select Location Type"
                , new { onchange = "refreshAreas()", @class = "form-control" })
            </div>

            <div class="form-group">
                <label asp-for="LabId" class="control-label">Lab</label>
                @Html.DropDownListFor(model => model.LabId, new SelectList(Model.Labs, "LabId", "Name"), "Select Lab", new { onchange = "labChange()", @class = "form-control  input-sm" })
                @Html.ValidationMessageFor(model => model.LabId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label asp-for="CityId" class="control-label">City</label>
                @Html.DropDownListFor(model => model.CityId, new SelectList(Model.Cities, "CityId", "Name"), "Select City", new { onchange = "refreshAreas()", @class = "form-control  input-sm", @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
            </div>

            <div id="AreaIddiv" class="form-group" style="display:none">
                <label asp-for="AreaId" class="control-label">Area</label>
                @Html.DropDownListFor(model => model.AreaId, new SelectList(Model.Areas, "AreaId", "Name"), "Select Area", new { onchange = "refreshBranchs()", @class = "form-control  input-sm", @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.AreaId, "", new { @class = "text-danger" })
            </div>



            <div id="BranchIddiv" class="form-group" style="display:none">
                <label asp-for="BranchId" class="control-label">Branch</label>
                @Html.DropDownListFor(model => model.BranchId, new SelectList(Model.Branches, "BranchId", "Name"), "Select Branch", new { @class = "form-control  input-sm" })
                @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
            </div>


            <div id="Addressdiv" class="form-group" style="display:none">
                <label asp-for="Address" class="control-label"></label>
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.AllLabTest, "Select Required Tests", new { @class = "control-label" })
                @*@Html.ListBoxFor(m => m.SelectedLabTest, Model.AllLabTest, new { @class = "form-control  input-sm" })*@




                <table id="TestGrids" d class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th></th>
                            <th>Test Name</th>
                            <th>Lab Name</th>
                            <th>Fees</th>
                        </tr>
                    </thead>
                    <tbody>

                        @for (int i = 0; i < Model.SelectedLabTest.Count(); i++)
                        {
                        <tr>
                            <td>
                                @Html.CheckBoxFor(m => m.SelectedLabTest[i].Selected, new { @class = "labprice", onchange = "ontablecheck()", disabled = "disabled" })
                            </td>

                            <td class="labId" style="display:none;">
                                @Model.SelectedLabTest[i].LabId
                            </td>
                            <td style="display:none;">
                                @Html.HiddenFor(m => m.SelectedLabTest[i].TestId)
                            </td>
                            <td style="display:none;">
                                @Html.HiddenFor(m => m.SelectedLabTest[i].LabTestId)
                            </td>

                            <td style="display:none;">
                                @Html.HiddenFor(m => m.SelectedLabTest[i].Fees)
                            </td>

                            <td>
                                @Html.DisplayFor(m => m.SelectedLabTest[i].TestName)
                            </td>
                            <td>
                                @Html.DisplayFor(m => m.SelectedLabTest[i].LabName)
                            </td>
                            <td class="fees">@Html.DisplayFor(m => m.SelectedLabTest[i].Fees)</td>
                        </tr>
                        }

                    </tbody>
                </table>


            </div>

            <div class="form-group">
                <input type="button" onclick="saveData()" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>

    <div class="vertical"></div>

    <div class="col-md-5">
        <div id="homeFees">
        </div>
        <div id="LabFees">
        </div>
        <div id="TotalFees">
        </div>

        @if (Model.ReservationId > 0)
        {
            <div id="Reservation">
                <h3>Your Reservation Number Is : @Model.ReservationId</h3>
            </div>
        }


    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>


<script>

    let labprice = 0;
    let homeFees = 0;


    function refreshAreas() {
        if ($('#LocationType').val() != "") {

            if ($('#LocationType').val() == "true")
            {
                $('#BranchIddiv').hide();
                $('#Addressdiv').show();
            }

            if ($('#LocationType').val() == "false")
            {
                $('#Addressdiv').hide();
            }

            if ($('#LocationType').val() == "false" && $('#LabId').val() != "") {
                $('#BranchIddiv').show();
            }
            getHomeFees();

            $('#LocationType').attr('disabled', 'disabled');
            $('#AreaId').attr('disabled', 'disabled');
            $('#AreaId').html('')

            $.post('@Url.Action("GetAreas", "Home")', { location: $('#LocationType').val(), cityId: $('#CityId').val(), labId: $('#LabId').val()  }, function (data) {
                data.forEach(function (item, index) {
                    $('#AreaId').append('<option value="' + item.areaId + '">' + item.name + '</option>')
                });
                    $('#LocationType').removeAttr('disabled');
                    $('#AreaId').removeAttr('disabled');
                    $('#CityId').removeAttr('disabled');
                }).fail(function () {
                    $('#LocationType').removeAttr('disabled');
                    $('#AreaId').removeAttr('disabled');
                    $('#CityId').removeAttr('disabled');
                });



                @*$.post('@Url.Action("GetBranches", "Home")', { location: $('#LocationType').val(), cityId: $('#CityId').val() }, function (data) {
                    data.forEach(function (item, index) {
                        $('#BranchId').append('<option value="' + item.branchId + '">' + item.name + '</option>')
                    });*@

        } else {
            $('#AreaId').html('');
            $('#AreaId').attr('disabled', 'disabled');
            $('#CityId').attr('disabled', 'disabled');
        }
    }
    function refreshBranchs() {

        $('#BranchId').html('');

        $.post('@Url.Action("GetBranches", "Home")', { cityId: $('#CityId').val(), labId: $('#LabId').val(), areaId: $('#AreaId').val()}, function (data) {
            data.forEach(function (item, index) {
                $('#BranchId').append('<option value="' + item.branchId + '">' + item.name + '</option>')
            });
            if ($('#LocationType').val() == "false") {
                $('#BranchIddiv').show();
            }


        }).fail(function () {

            if ($('#LocationType').val() == "false") {
                $('#BranchIddiv').show();
            }

        });
    }
    function labChange() {

        getHomeFees();
        refreshBranchs();
        refreshAreas();
        refreshTests();

        $('.labprice:checked').prop('checked', false)
        ontablecheck()

        if ($('#LabId').val() != "") {
            $('.labprice').removeAttr('disabled');
            $('#AreaIddiv').show();
        }
    }
    function getHomeFees() {

        if ($('#LabId').val() != "" && $('#LocationType').val() == "true" ) {
            $.post('@Url.Action("GetLabHomeFees", "Home")', { labId: $('#LabId').val() }, function (data) {
                homeFees = data;
                refreshTotals()
            }).fail(function () {
                homeFees = 0;
                refreshTotals()
            });
        } else {
            homeFees = 0;
            refreshTotals()
        }

    }
    function refreshTests() {
        var selected = $('#LabId').val();
        $('tr').show();

        $('tr td.labId').each(function () {
            if ($.trim($(this).text()) != selected) {
                $(this).parent().hide();
            }
        });
    }
    function saveData() {
            $('#save').val('true');
            $('form').submit();
        }
    function ontablecheck() {
        labprice = 0;
        $('.labprice:checked').each(function (i, e) {
            labprice += parseFloat($(e).parent().parent().find('.fees').text());
        })
        refreshTotals()
    };
    function refreshTotals() {
        if (homeFees > 0) {
            $('#homeFees').text($('#LabId').find(":selected").text() + " Home Fees is : " + homeFees);
            $('#homeFees').show();
        }
        else {
            $('#homeFees').hide();
        }

        if (labprice > 0) {
            $('#LabFees').text("Lab Fees is: " + labprice);
            $('#LabFees').show();
        }
        else {
            $('#LabFees').hide();
        }

        if (labprice > 0) {
            $('#TotalFees').text("Total Fees is : " + (labprice + homeFees));
            $('#TotalFees').show();
        }
        else {
            $('#TotalFees').hide();
        }
    }


</script>

